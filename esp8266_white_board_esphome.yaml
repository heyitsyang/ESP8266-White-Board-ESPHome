
# THE COMMENTED LINES BELOW NEED TO BE EDITED, UNCOMMENTED
# AND ADDED TO YOUR LOCAL YAML.  DO NOT ADD THE WHITE BOARD PACKAGE DEFINITIONS
# TO YOUR LOCAL YAML FILE

# # Change the name to whatever you like
#esphome:
#   name: whiteboard-esphome
#   friendly_name: whiteboard-esphome

# esp8266:
#   board: esp01_1m

# # Enable logging
# logger:

# # Enable Home Assistant API
# api:
#   encryption:
#     key: "<your auto generated API key>"

# ota:
#   password: "<your auto generated OTA key>""

# wifi:
#   ssid: !secret wifi_ssid
#   password: !secret wifi_password

# # Enable fallback hotspot (captive portal) in case wifi connection fails
# # change the ssid & password to wahtever you like
#   ap:
#     ssid: "WB-Esphome"
#     password: "handsontech"    
# captive_portal:

# # The rest of the configuration is in the indicated yaml file ar the github address below
# packages:
#   remote_esp8266_wb: 
#     url: https://github.com/heyitsyang/ESP8266-White-Board-ESPHome
#     ref: main
#     files:
#       - esp8266_white_board_esphome.yaml




#### vvvvvvvv WHITE BOARD PACKAGE DEFINITIONS BEGIN BELOW vvvvvvvvvvv ####

# output components (pins) need to be identified here before
# they can be used by other entities
output:
  - platform: esp8266_pwm
    id: output_component_red
    pin: GPIO15
  - platform: esp8266_pwm
    id: output_component_grn
    pin: GPIO13
  - platform: esp8266_pwm
    id: output_component_blu
    pin: GPIO12
  - platform: esp8266_pwm
    id: output_component_wht
    pin: GPIO14
  - platform: gpio
    pin: GPIO5
    id: output_component_beeper
  - platform: gpio
    pin: GPIO16
    id: output_component_relay

# use a switch for the relay and beeper
switch:
  - platform: output
    name: "beeper"
    output: output_component_beeper
  - platform: output
    name: "relay"
    output: output_component_relay

# set up RGB light - color blending is done in HA UI
light:
  - platform: rgb
    name: "RGB LED"
    red: output_component_red
    green: output_component_grn
    blue: output_component_blu
  - platform: monochromatic
    name: "White LED"
    output: output_component_wht

# binary_sensors are inputs with only two possible states
# the invert filters are because buttons are active low
binary_sensor:
  - platform: gpio
    pin: GPIO0
    name: "S2"
    filters:
      - invert
  - platform: gpio
    pin: GPIO2
    name: "S3"
    filters:
      - invert

# Define pins for DHT Temp/HUM sensors
# AtoD uses the built-in function in the ESP8266
sensor:
  - platform: dht
    pin: GPIO4
    temperature:
      name: "DHT11 Temperature"
    humidity:
      name: "DHT11 Humidity"
    update_interval: 60s
  - platform: adc
    pin: A0
    name: "AtoD Converter"
    update_interval: 60s